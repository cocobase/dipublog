<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>hexo-category-config</title>
      <link href="/dipublog/2020/05/30/hexo-category-config/"/>
      <url>/dipublog/2020/05/30/hexo-category-config/</url>
      
        <content type="html"><![CDATA[<p>Hexo的Category分类管理文章功能是需要配置以后才会正常显示的。</p><h2 id="创建“分类”选项"><a href="#创建“分类”选项" class="headerlink" title="创建“分类”选项"></a>创建“分类”选项</h2><ol><li><p>生成分类页并添加type属性<br>打开命令行，进入博客所在的文件夹，执行命令</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page categories</span><br></pre></td></tr></table></figure><p>成功后会提示： Info Created: ~/……/blog/source/categories/index.md<br>根据上面提示的路径找到index.md这个文件，打开后修改默认的内容，重点是增加了一样内容：type: “categories”</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: 文章分类</span><br><span class="line">date：</span><br><span class="line">type: &quot;categories&quot;</span><br><span class="line">layout: &quot;categories&quot;</span><br><span class="line">comments: false</span><br><span class="line">---</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line"></span><br><span class="line">配置theme下面的_config.yml文件，寻找到其中的menu部分，将categories:前面的注释符号去掉，以开启分类菜单</span><br><span class="line">&#96;&#96;&#96; bash</span><br><span class="line">menu:</span><br><span class="line">  home: &#x2F; || home</span><br><span class="line">  #about: &#x2F;about&#x2F; || user</span><br><span class="line">  tags: &#x2F;tags&#x2F; || tags</span><br><span class="line">  categories: &#x2F;categories&#x2F; || th</span><br><span class="line">  archives: &#x2F;archives&#x2F; || archive</span><br><span class="line">  #schedule: &#x2F;schedule&#x2F; || calendar</span><br></pre></td></tr></table></figure></li><li><p>给文章增加”categories”属性<br>打开需要添加分类的文章，为该文章添加categories属性。hexo文章只能属于一个分类。如果在下面举例中的”-web前端”分类下方添加”-xxx”分类，hexo不会产生两个分类，而是把分类嵌套（该文章属于“-web前端”分类下的”-xxx”分类</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line">title: xxxx</span><br><span class="line">date: xxxx-xx-xx xx:xx:xx</span><br><span class="line">categories:</span><br><span class="line">- web前端</span><br><span class="line">---</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-search</title>
      <link href="/dipublog/2020/05/30/hexo-search/"/>
      <url>/dipublog/2020/05/30/hexo-search/</url>
      
        <content type="html"><![CDATA[<p>随着时间的推移，个人站点的博客文章会越来越多，那怎么样才能快速找到你印象中的文章呢？增加一个站点内的搜索功能是非常有必要和方便的。  </p><a id="more"></a><h2 id="具体操作的步骤"><a href="#具体操作的步骤" class="headerlink" title="具体操作的步骤"></a>具体操作的步骤</h2><ol><li>安装搜索需要的插件：在Hexo的根目录下，打开命令可执行窗口，执行如下命令: <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br><span class="line">npm install hexo-generator-searchdb --save</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line">上述命令执行成功表示正确安装了搜索所需要的插件。  </span><br><span class="line"></span><br><span class="line">2. 全局配置文件_config.yml，新增如下内容：</span><br><span class="line">&#96;&#96;&#96; </span><br><span class="line">search:</span><br><span class="line">     path: search.xml</span><br><span class="line">     field: post</span><br><span class="line">     format: html</span><br><span class="line">     limit: 10000</span><br><span class="line">&#96;&#96;&#96;  </span><br><span class="line">  </span><br><span class="line">3. hexo主题配置文件（\themes\next_config.yml），修改local_search的enable为true：</span><br><span class="line">   &#96;&#96;&#96; </span><br><span class="line">   # Local search</span><br><span class="line">   # Dependencies: https:&#x2F;&#x2F;github.com&#x2F;flashlab&#x2F;hexo-generator-search</span><br><span class="line">   local_search:</span><br><span class="line">        enable: true</span><br><span class="line">        # if auto, trigger search by changing input</span><br><span class="line">        # if manual, trigger search by pressing enter key or search button</span><br><span class="line">        trigger: auto</span><br><span class="line">        # show top n results per article, show all results by setting to -1</span><br><span class="line">        top_n_per_article: 1</span><br><span class="line">    &#96;&#96;&#96;  </span><br><span class="line">  </span><br><span class="line">## 重新生成站点:</span><br><span class="line">    &#96;&#96;&#96; bash</span><br><span class="line">    hexo clean</span><br><span class="line">    hexo g</span><br><span class="line">    hexo s</span><br></pre></td></tr></table></figure></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hongkong-vps</title>
      <link href="/dipublog/2020/05/01/hongkong-vps/"/>
      <url>/dipublog/2020/05/01/hongkong-vps/</url>
      
        <content type="html"><![CDATA[<p><a href="http://www.sugarhosts.com/" target="_blank" rel="noopener">www.sugarhosts.com</a>，香港VPS，可支付宝.<br>成立于2009年的英国主机商，以虚拟主机起家，有一定的知名度；主营业务有：域名、SSL证书、虚拟主机、VPS、独立服务器；业务分布在全球多个机房，包括：美国（洛杉矶、纽约）、中国（香港、台湾）、荷兰（鹿特丹）、德国（法兰克福）、法国（鲁贝）</p>]]></content>
      
      
      
        <tags>
            
            <tag> 虚拟主机 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Scrapy的Xpath用法</title>
      <link href="/dipublog/2020/04/21/scrapy/xpath/"/>
      <url>/dipublog/2020/04/21/scrapy/xpath/</url>
      
        <content type="html"><![CDATA[<h2 id="什么是xpath"><a href="#什么是xpath" class="headerlink" title="什么是xpath"></a>什么是xpath</h2><p>Xpath是一门在XML文档中查找信息的语言，可以对XML文档中的元素和属性使用路径表达式进行导航，Xpath包含一个标准函数库。<br>一般来说，使用id、name、class等属性就能对节点进行定位就能解决绝大部分解析需求，但有时候遇到以下情况，使用Xpath就更方便：</p><ul><li>没有id、name、class等</li><li>标签的属性或者文本特征不显著</li><li>标签嵌套层次太复杂</li></ul><a id="more"></a><h2 id="xpath常用标签"><a href="#xpath常用标签" class="headerlink" title="xpath常用标签"></a>xpath常用标签</h2><p>/ ——提取某个标签下的所有内容<br>text() ——- 提取标签所包含的文本内容<br>@ ———- 提取标签属性的信息<br>// ———- 寻找所有的标签<br>[@属性=值] —— 定位标签  </p><h3 id="Xpath定位方法：Xpath路径"><a href="#Xpath定位方法：Xpath路径" class="headerlink" title="Xpath定位方法：Xpath路径"></a>Xpath定位方法：Xpath路径</h3><img src="/dipublog/2020/04/21/scrapy/xpath/xpath-route.png" class="" title="xpath路径"> <p>举例一:定位节点  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#查找html下的body下的form下的所有input节点</span><br><span class="line">/html/body/form/input</span><br><span class="line"></span><br><span class="line">#查找所有input节点</span><br><span class="line"><span class="comment">//input</span></span><br></pre></td></tr></table></figure><p>举例二:通配符*选择未知的节点  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">#查找form节点下的所有节点</span><br><span class="line"><span class="comment">//form/*#查找所有节点//*</span></span><br><span class="line"></span><br><span class="line">#查找所有input节点（input至少有爷爷辈亲戚节点）</span><br><span class="line"></span><br><span class="line"><span class="comment">//*/input</span></span><br></pre></td></tr></table></figure><img src="/dipublog/2020/04/21/scrapy/xpath/xpath-main.png" class="" title="主语"><h2 id="使用索引"><a href="#使用索引" class="headerlink" title="使用索引"></a>使用索引</h2><p>如果筛选时元素时出现多个节点，但我们想确定唯一节点。可以使用类似于列表索引的方式精确定位。<br>举例一：  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#定位 第8个td下的 第2个a节点</span><br><span class="line"><span class="comment">//*/td[7]/a[1]</span></span><br><span class="line"></span><br><span class="line">#定位 第8个td下的 第3个span节点</span><br><span class="line"><span class="comment">//*/td[7]/span[2]</span></span><br><span class="line"></span><br><span class="line">#定位 最后一个td下的  最后一个a节点</span><br><span class="line"><span class="comment">//*/td[last()]/a[last()]</span></span><br></pre></td></tr></table></figure><img src="/dipublog/2020/04/21/scrapy/xpath/xpath-wei.png" class="" title="谓语">  <h2 id="使用属性"><a href="#使用属性" class="headerlink" title="使用属性"></a>使用属性</h2><p>为了让定位更精准，跟使用索引类似，我们要增加信息量，那么还可以使用属性。@符号是属性符<br>举例一：  </p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">#定位所有包含name属性的input节点</span><br><span class="line"><span class="comment">//input[@name]</span></span><br><span class="line"></span><br><span class="line">#定位含有属性的所有的input节点</span><br><span class="line"><span class="comment">//input[@*]</span></span><br><span class="line"></span><br><span class="line">#定位所有value=2的input节点</span><br><span class="line"><span class="comment">//input[@value='2']</span></span><br><span class="line"></span><br><span class="line">#使用多个属性定位</span><br><span class="line"><span class="comment">//input[@value='2'][@id='3']</span></span><br><span class="line">或者<span class="comment">//input[@value='2' and @id='3']</span></span><br></pre></td></tr></table></figure><img src="/dipublog/2020/04/21/scrapy/xpath/xpath-express.png" class="" title="表达式"><h2 id="使用举例"><a href="#使用举例" class="headerlink" title="使用举例"></a>使用举例</h2><p>/html —–代表提取html标签内的所有内容<br>/html/head/title —–代表提取title下面的所有信息<br>//li —— 代表提取所有的li标签<br>//li[@class=’hidden-xs’] ——– 直接定位到满足条件的标签<br>//li[@class=’hidden-xs’]/a/@heef ———- 提取到class = hidden-cs的li标签下面的a标签的href的值</p><h2 id="常用函数"><a href="#常用函数" class="headerlink" title="常用函数"></a>常用函数</h2><p>除了索引、属性外，Xpath还可以使用便捷的函数来增强定位的准确性。下面试常用的几个函数：  </p><img src="/dipublog/2020/04/21/scrapy/xpath/xpath-func.png" class="" title="常用函数"><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">a</span> <span class="attr">class</span>=<span class="string">"menu_hot"</span> <span class="attr">href</span>=<span class="string">"/ads/auth/promote.html"</span>&gt;</span>应用推广<span class="tag">&lt;/<span class="name">a</span>&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">#定位href属性中包含“promote.html”的所有a节点</span><br><span class="line"><span class="comment">//a[contains(@href,'promote.html')]</span></span><br><span class="line"></span><br><span class="line">#元素内的文本为“应用推广”的所有a节点</span><br><span class="line"><span class="comment">//a[text()='应用推广']</span></span><br><span class="line"></span><br><span class="line">#href属性值是以“/ads”开头的所有a节点</span><br><span class="line"><span class="comment">//a[starts-with(@href,'/ads')]</span></span><br></pre></td></tr></table></figure><h2 id="xpath轴"><a href="#xpath轴" class="headerlink" title="xpath轴"></a>xpath轴</h2><p>这部分类似BeautifulSoup中的sibling、parents、children方法。  </p><img src="/dipublog/2020/04/21/scrapy/xpath/xpath-zhou.png" class="" title="xpath轴"><h2 id="scrapy中使用xpath"><a href="#scrapy中使用xpath" class="headerlink" title="scrapy中使用xpath"></a>scrapy中使用xpath</h2><p>爬取html页面的title标签内容和class=‘note’的div标签下的内容</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">next</span><span class="params">(self,response)</span>:</span></span><br><span class="line">    title = response.xpath(<span class="string">"/html/head/title/text()"</span>).extract()</span><br><span class="line">    note = response.xpath(<span class="string">"//div[@class = 'note']/text()"</span>).extract()</span><br><span class="line">    print(title)</span><br><span class="line">    print(note)</span><br></pre></td></tr></table></figure><h2 id="常用学习参考链接"><a href="#常用学习参考链接" class="headerlink" title="常用学习参考链接"></a>常用学习参考链接</h2><p><a href="https://doc.scrapy.org/en/xpath-tutorial/topics/xpath-tutorial.html" target="_blank" rel="noopener">Scrapy官方文档中的xpath使用方法</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 爬虫 </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>金融数据收集</title>
      <link href="/dipublog/2020/04/06/mysubdir/fin-data-collect/"/>
      <url>/dipublog/2020/04/06/mysubdir/fin-data-collect/</url>
      
        <content type="html"><![CDATA[<p>tushare.pro<br><a href="https://stock.qianzhan.com/" target="_blank" rel="noopener">前瞻眼</a><br><a href="http://www.cninfo.com.cn/new/index" target="_blank" rel="noopener">巨潮资讯网</a><br><a href="https://www.kancaibao.com/index.asp" target="_blank" rel="noopener">看财报</a><br><a href="http://www.imeigu.com/" target="_blank" rel="noopener">i美股</a><br><a href="http://baostock.com/baostock/index.php/%E9%A6%96%E9%A1%B5" target="_blank" rel="noopener">证券宝www.baostock.com是一个免费、开源的证券数据平台（无需注册）</a><br><a href="http://originp.com" target="_blank" rel="noopener">原点参数</a>上市公司的财务报告PDF文件比较丰富<br><a href="http://zhihu.com/question/20929516/answer/546082129" target="_blank" rel="noopener">知乎的回答-关于财报数据获取</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 金融数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>四种波动率</title>
      <link href="/dipublog/2020/03/27/mysubdir/volatility/"/>
      <url>/dipublog/2020/03/27/mysubdir/volatility/</url>
      
        <content type="html"><![CDATA[<p>SHELDON NATENBERG 的《Option Volatility Trading  Strategies》，书的内容还是很入门的，从基本的概率论，方差、分布、VaR讲起，没有什么特别高阶的东西。总体来说，入门，或者复习的好书毕竟连GARCH这样的模型都只是提了一下。不过，总体而言，入门知识讲的还是很清楚的。</p><ul><li>Future Volatility是未来波动率，确切的说，是未来真正的波动率。一听就知道，这个肯定没有人知道，而整个期权交易的核心就是如何预测这个未来波动率，包括其他三种波动率，说白了都是为了能够更好的估计未来波动率而努力的。</li><li>而历史波动率，其实就是通过之前的交易数据计算出来的波动率，这是能够确定的。</li><li>预测波动率则是一个很广泛的概念了，你可以随便预测未来波动率，抛色子能够获得Forecast Volatility，拍脑袋也行，GARCH模型也行，用期权的市场价格来预测也行，因为期权的价格与未来的波动率紧密相关。</li><li>上面这些所谓预测未来波动率的方法中的最后一种，通过期权的市场价格来计算一个波动率，这个波动率叫做隐含波动了,Implied Volatility。换句话说，隐含波动了就是全市场投票，共同预测的未来的波动率。</li></ul><img src="/dipublog/2020/03/27/mysubdir/volatility/volatility.jpg" class="" title="波动率"><ul><li><a href="https://www.zhihu.com/question/19770602" target="_blank" rel="noopener">知乎：价格波动率有没有准确的表达式？</a>写的非常详细和专业。</li><li><a href="https://vlab.stern.nyu.edu/zh" target="_blank" rel="noopener">波动实验室</a>波动实验室(V-Lab)为多种金融资产的波动率、相关性、风险指标提供实时数据、建模、预测，涵盖了美国与其他国家的大量个股、股指、信用违约互换协议（CDS）、外汇、商品期货、债券等。V-lab将金融计量经济学中的经典模型与最新进展结合在一起。我们致力于金融研究者、监管者与从业者提供实时市场动态。</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 量化交易 </tag>
            
            <tag> 金融 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>前端学习网站收藏</title>
      <link href="/dipublog/2020/03/20/mycss/front-end-collect/"/>
      <url>/dipublog/2020/03/20/mycss/front-end-collect/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://tutorialzine.com" target="_blank" rel="noopener">内容优良的关于前端的学习网站</a></li><li><a href="https://davidwalsh.name" target="_blank" rel="noopener">David Walsh personal blog always publishes articles on different back-end technologies and front-end technologies specifically for the web.</a></li><li><a href="https://cssauthor.com" target="_blank" rel="noopener">CSS Author website is full of freebies such as wallpapers, templates, and icons.</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 前端 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>vue前端技术栈</title>
      <link href="/dipublog/2020/03/20/mycss/vue-tech-stack/"/>
      <url>/dipublog/2020/03/20/mycss/vue-tech-stack/</url>
      
        <content type="html"><![CDATA[<h2 id="Vue-js技术栈"><a href="#Vue-js技术栈" class="headerlink" title="Vue.js技术栈"></a>Vue.js技术栈</h2><ul><li>npm：node.js的包管理工具，用于同一管理我们前端项目中需要用到的包、插件、工具、命令等，便于开发和维护。</li><li>ES6：Javascript的新版本，ECMAScript6的简称。利用ES6我们可以简化我们的JS代码，同时利用其提供的强大功能来快速实现JS逻辑。</li><li>Babel：一款将ES6代码转化为浏览器兼容的ES5代码的插件</li><li>vue-cli：Vue的脚手架工具，用于自动生成Vue项目的目录及文件。</li><li>vue-router： Vue提供的前端路由工具，利用其我们实现页面的路由控制，局部刷新及按需加载，构建单页应用，实现前后端分离。</li><li>vuex：Vue提供的状态管理工具，用于同一管理我们项目中各种数据的交互和重用，存储我们需要用到数据对象。</li><li>webpack：一款强大的文件打包工具，可以将我们的前端项目文件同一打包压缩至js中，并且可以通过vue-loader等加载器实现语法转化与加载。</li></ul><a id="more"></a><h2 id="Node-js"><a href="#Node-js" class="headerlink" title="Node.js"></a>Node.js</h2><p>node.js是对Chrome V8引擎进行了封装，是一个能让JavaScript运行在服务端的开发平台，它让JavaScript成为与PHP、Python、Perl、Ruby等服务端语言平起平坐的脚本语言。作为异步驱动的 JavaScript 运行时，Node.js 被设计成可升级的网络应用。Node 中几乎没有函数直接执行 I/O 操作，因此进程从不阻塞。由于没有任何阻塞，可伸缩系统在 Node 中开发是非常合理的。  </p><p>HTTP 是 Node.js 中的一等公民。它设计的是流式和低延迟。这使得 Node.js 非常适合于 web 库或框架的基础。</p><h2 id="Npm"><a href="#Npm" class="headerlink" title="Npm"></a>Npm</h2><p>在传统的前端开发中我们会经常引入jquery、bootstrap、echarts等js插件，我们首先去插件的每个官网去下载下来，然后放到自己前端工程中static/js目录下，我们每引用一个插件都要去官网下载，然后将下载的插件拖到工程中来，美国的一个程序员Isaac Z. Schlueter就做够了这种机械运动，想简化这个流程，于是做了这样一件事：</p><ul><li>买了台服务器作为代码仓库(registry), 用于存放被共享的代码</li><li>发邮件分别通知各大JS插件作者(如jQuery的作者、bootstrap的作者、Vue的作者、element-ui的作者等等)让他们使用npm publish 命令将自己的JS插件提交到registry中</li><li>用户如果想使用某个JS插件可以先在package.json中配置一些需要安装的插件名称和对应的版本号(依赖dependency)，然后通过npm install命令来下载它们，下载下来的插件自动放在node_modules目录下面</li></ul><p>这套思想和maven是完全一样的，熟悉maven或者gradle的也就自然理解npm了，只不过npm用于js,maven用于java，都是作者先将共享的代码放到某个公共的代码仓库，用户先在配置文件中配置好要使用的依赖，然后通过一个命令就能下载下来。</p><h2 id="Webpack-前端项目的构建工具"><a href="#Webpack-前端项目的构建工具" class="headerlink" title="Webpack:前端项目的构建工具"></a>Webpack:前端项目的构建工具</h2><p>传统的前端一般会html、javascript、css这三样东西就够了。现代的前端发展迅猛，引入了TypeScript、SCSS、LESS、stylus(CSS预处理器)等技术，提供了更丰富的特性，提高了开发效率，但是引入的这些技术不能直接被浏览器解析，需要一个东西将浏览器不能解析的代码翻译成浏览器可以直接解析代码，这就是webpack的作用。</p><ul><li>TypeScript是JavaScript类型的超集(简单的说就是对JavaScript的封装)，提供更加丰富的特性(在JavaScript上添加了可选的静态类型和基于类的面向对象编程)，而且可以编译成纯JavaScript</li><li>ECMAScript：ECMAScript是标准，JavaScript是ECMAScript的实现，ECMAScript也在快速发展，引入了更多的语法新特性等。其中ECMAScript6使用较多，现在ECMAScript8已经发布了。</li><li>SCSS: SCSS即是SASS的新语法，是Sassy CSS的简写，是CSS3语法的超集，也就是说所有有效的CSS3样式也同样适合于SASS。SASS是CSS3的一个扩展，增加了规则嵌套、变量、混合、选择器继承等等。通过使用命令行工具或WEB框架插件把它转换成标准的、格式良好的CSS代码。</li><li>less: Less 是一门 CSS 预处理语言，它扩展了 CSS 语言，增加了变量、Mixin、函数等特性，使 CSS 更易维护和扩展。Less 可以运行在 Node 或浏览器端。</li><li>stylus：文件后缀是. styl 的这个哥们儿学名叫 stylus，是 CSS 的预处理框架。stylus 给 CSS 添加了可编程的特性，也就是说，在 stylus 中可以使用变量、函数、判断、循环一系列 CSS 没有的东西来编写样式文件，执行这一套骚操作之后，这个文件可编译成 CSS 文件。</li></ul><p>webpack可以看做是模块打包机：它做的事情是，分析你的项目结构，找到JavaScript模块以及其它的一些浏览器不能直接运行的拓展语言（TypeScript、SCSS等），并将其打包为合适的格式以供浏览器直接使用。随着webpack的发展，webpack支持ECMAScript6、ECMAScript7、ECMAScript8等。随着webpack的发展，webpack不仅仅用来编译(翻译)代码，也集成了更多的功能，比如：</p><ol><li>热加载：修改了代码然后保存，浏览器会自动刷新</li><li>压缩文件：压缩图片，字体, 脚本文件等</li><li>插件(plugin)：webpack打包时可以执行某个插件，控制webpack打包时的某个过程，这种插件机制和maven中的插件原理完全一样</li></ol><p>模块(module)化就是把复杂的应用程序细分为较小的文件，在webpack中一切都是模块，js、css、图片、字体等待都可称为模块。</p><h3 id="webpack中的重要功能"><a href="#webpack中的重要功能" class="headerlink" title="webpack中的重要功能"></a>webpack中的重要功能</h3><ol><li><p>devtool:<br>devtool: “eval-source-map” webpack打包后的文件可读性非常低，不利于调试，使用devtool可以生成对应的源码便于调试。使用eval打包源文件模块，在同一个文件中生成干净的完整的source map。这个选项可以在不影响构建速度的前提下生成完整的sourcemap，但是对打包后输出的JS文件的执行具有性能和安全的隐患。在开发阶段这是一个非常好的选项，在生产阶段则一定不要启用这个选项；</p></li><li><p>webpack-dev-server:<br>webpack-dev-server 是一个本地开发服务器，居于node.js实现的，使用npm run dev 后就可以使用默认的8080端口在浏览器上访问了，类似于apache的功能</p></li><li><p>loaders:<br>loader可以让webpack有能力调用外部的脚本或工具，实现对不同格式的文件的处理，比如说分析转换scss为css，或者把下一代的JS文件（ES6，ES7)转换为现代浏览器兼容的JS文件。css-loader 和 style-loader 就是用来处理样式的。</p></li><li><p>Babel(很重要):<br>Babel其实是一个编译JavaScript的平台，它可以编译代码帮你达到以下目的：</p><ul><li>让你能使用最新的JavaScript代码（ES6，ES7等待），而不用管新标准是否被当前使用的浏览器完全支持；</li><li>让你能使用基于JavaScript进行了拓展的语言，比如React的JSX；</li></ul></li><li><p>plugins:<br>插件（Plugins）是用来拓展Webpack功能的，它们会在整个构建过程中生效，执行相关的任务。<br>Loaders和Plugins常常被弄混，但是他们其实是完全不同的东西，可以这么来说，loaders是在打包构建过程中用来处理源文件的（JSX，Scss，Less..），一次处理一个，插件并不直接操作单个文件，它直接对整个构建过程其作用。<br>Webpack有很多内置插件，同时也有很多第三方插件，可以让我们完成更加丰富的功能  </p><p>常用的插件：</p><ul><li>HtmlWebpackPlugin</li><li>Hot Module Replacement（HMR） 热加载：允许你在修改组件代码后，自动刷新实时预览修改后的效果</li><li>clean-webpack-plugin 去除build文件中的残余文件</li><li>OccurenceOrderPlugin :为组件分配ID，通过这个插件webpack可以分析和优先考虑使用最多的模块，并为它们分配最小的ID</li><li>UglifyJsPlugin： 压缩JS代码</li><li>ExtractTextPlugin：分离CSS和JS文件</li></ul></li></ol><h2 id="Vue"><a href="#Vue" class="headerlink" title="Vue"></a>Vue</h2><ul><li>它是一个轻量级的MVVM框架。</li><li>使用 数据驱动+组件化 来开。</li><li>数据双向绑定(当修改视图时数据也会赋值给model，当更改model的时候也会反应到视图上)。</li><li>页面上每个独立的可视或者可交互的区域均视为一个组件，每个组件对应一个工程目录(文件夹)，组件所需要的各种资源尽可能的都放在这个目录下就近维护(即将模板、样式、js等都写在一个.vue文件中)，组件可以嵌套自由组合，形成完整的页面。</li></ul><h2 id="集成Element"><a href="#集成Element" class="headerlink" title="集成Element"></a>集成Element</h2><ol><li><p>安装element-ui<br>```js</p><h1 id="切换到项目根目录"><a href="#切换到项目根目录" class="headerlink" title="切换到项目根目录"></a>切换到项目根目录</h1><p>$ cd <project root dir></p><h1 id="安装element-ui-安装后package-json中dependencies就会增加element-ui依赖"><a href="#安装element-ui-安装后package-json中dependencies就会增加element-ui依赖" class="headerlink" title="安装element-ui, 安装后package.json中dependencies就会增加element-ui依赖"></a>安装element-ui, 安装后package.json中dependencies就会增加element-ui依赖</h1><p>$ cnpm i element-ui -S </p></li><li><p>在main.js中配置element-ui<br>在main.js中增加导入和让Vue使用ElementUI</p><pre><code class="js"><span class="keyword">import</span> Vue <span class="keyword">from</span> <span class="string">'vue'</span><span class="keyword">import</span> App <span class="keyword">from</span> <span class="string">'./App'</span><span class="keyword">import</span> router <span class="keyword">from</span> <span class="string">'./router'</span><span class="comment">// 导入element-ui</span><span class="keyword">import</span> ElementUI <span class="keyword">from</span> <span class="string">'element-ui'</span>Vue.config.productionTip = <span class="literal">false</span><span class="comment">// Vue使用ElementUI</span>Vue.use(ElementUI)<span class="comment">/* eslint-disable no-new */</span><span class="keyword">new</span> Vue({    el: <span class="string">'#app'</span>,    router,    components: { App },    template: <span class="string">'&lt;App/&gt;'</span>    })</code></pre></li><li><p>安装依赖<br>cnpm install</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>新版国债逆回购一纸禅</title>
      <link href="/dipublog/2020/03/18/mysubdir/nation-bond/"/>
      <url>/dipublog/2020/03/18/mysubdir/nation-bond/</url>
      
        <content type="html"><![CDATA[<blockquote><p>只有抛弃一切，才能获得自由</p></blockquote><img src="/dipublog/2020/03/18/mysubdir/nation-bond/haibao.jpg" class="" title="电影搏击俱乐部"><h2 id="什么是国债逆回购"><a href="#什么是国债逆回购" class="headerlink" title="什么是国债逆回购"></a>什么是国债逆回购</h2><p>国债逆回购，实际上是一种短期借款，即你把钱借给别人，获得固定利息；对方用国债做抵押到期还本付息。逆回购的安全性超强基本等同国债。</p><h2 id="国债逆回购的优点"><a href="#国债逆回购的优点" class="headerlink" title="国债逆回购的优点"></a>国债逆回购的优点</h2><ol><li>收益较活期利率要高很多，国债逆回购预期年化收益通常在1.5%以上，收益率远高于同期银行存款利率水平。</li><li>国债逆回购交易安全性高，逆回购在成交之后不再承担价格波动的风险。国债逆回购的收益在交易完成后收益就已经明确，因此逆回购到期日之前市场利率水平的波动与其收益无关。</li></ol><h2 id="可交易的国债逆回购品种"><a href="#可交易的国债逆回购品种" class="headerlink" title="可交易的国债逆回购品种"></a>可交易的国债逆回购品种</h2><p>上海交易所可交易的质押式回购有：1日（204001）2日（204002）3日（204003）4日（204004）7日（204007）14日（204014）28日（204028）91日（204091）182日（204182）共计9个品种。</p><p>深圳交易所可交易的质押式回购有：1日（131810）2日（131811）3日（131800）4日（131809）7日（131801） 14日（131802） 28日（131803）91日（131805）182日（131806）共9个品种。</p><h2 id="国债逆回购操作流程"><a href="#国债逆回购操作流程" class="headerlink" title="国债逆回购操作流程"></a>国债逆回购操作流程</h2><p>目前所有的券商都支持国债逆回购操作，具体方法进入券商交易界面，选择“卖出”，输入逆回购代码、价格（年化收益率）、数量后下单即可。其中上海下单数量必须是1000的整数倍，最低需要资金1000×100=10万元；深圳下单数量必须是10的整数倍，最低需要资金10×100=1000元<br>收益到帐时间：T+n资金到帐，此时可用但不可取，T+n+1日可取。n为逆回购天数（名义天数）。</p><p>手续费率：1日0.001%、2日0.002%、3日0.003%、4日0.004%、7日0.005%、14日0.01%、28日0.02%、91日0.03%、182日0.03%。<br>收益计算：收益 =（价格 / 365）× N × 资金总量 — 手续费率 × 资金总量</p><p>其中N为资金实际占用天数与逆回购名义天数n略有不同。具体来说就是：</p><p>如果T + n正好是节假日前一个交易日则：N = n + 节假日天数。</p><p>如果T + n正好是节假日后一个交易日则：N = n – 节假日天数，若n &lt; 节假日天数则：N = 1</p><h2 id="国债逆回购操作技巧"><a href="#国债逆回购操作技巧" class="headerlink" title="国债逆回购操作技巧"></a>国债逆回购操作技巧</h2><p>1、一般月末、季度末、年末价格，市场资金面紧张价格通常很高。<br>2、单日内一般上午10:30和14:30这两个时间点附近容易出现价格高点。</p><p>3、如果每天仅做1天逆回购，周四的时候做1天逆回购，周五再买货币基金比较划算。</p><h2 id="可转债套利-转股溢价率"><a href="#可转债套利-转股溢价率" class="headerlink" title="可转债套利-转股溢价率"></a>可转债套利-转股溢价率</h2><p><a href="https://www.jisilu.cn/data/cbnew/cb_index/" target="_blank" rel="noopener">集思录可转债等权指数</a><br><a href="http://www.sse.com.cn/market/bonddata/convertible/" target="_blank" rel="noopener">上海证券交易所：可转债转股统计</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 现金管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>债券投资</title>
      <link href="/dipublog/2020/03/18/mysubdir/bond-collect/"/>
      <url>/dipublog/2020/03/18/mysubdir/bond-collect/</url>
      
        <content type="html"><![CDATA[<h2 id="基本常识"><a href="#基本常识" class="headerlink" title="基本常识"></a>基本常识</h2><p>债券收益 = (利息收入 + 资本利得 ) * 杠杆系数 * 骑乘效应 </p><h3 id="骑乘效应"><a href="#骑乘效应" class="headerlink" title="骑乘效应"></a>骑乘效应</h3><p>骑乘效应：在债券持有期间,一只债券的剩余期限也会逐渐变短,其收益率沿着收益率曲线下滑而给投资者带来的收益就被称为骑乘效应。</p><p>看的我晕头转向，我度娘了不少，觉得这个解释很好理解，供像我这样的小白用户从参考：</p><p>“比如久期为1年的债券，YTM=1.如果没有任何策略，持有1年到期，收益为1也就固定了。<br>　　但是由于久期短，其收益曲线陡峭，所以1的收益率不是每月平均12份1的，可能前3个月占50%，后9个月占50%。<br>　　这时候，我们应该持有3个月获得0.5收益后，马上出手，再换入其他1年久期债券，3个月再换。。。<br>　　如此，一年内，4次换债，每次0.5，所以具有了4*0.5 = 2的收益。比持有不动收益翻倍了。<br>　　这就是骑乘效应。”</p><p>充分利用骑乘效应，长线投资久期较长的债券2~4年，获取利润最丰厚的一截，然后将其卖给偏好短久期债券的机构和个人投资者。可以获取相对稳定和较高的收益。并能规避掉可能存在的债券风险。</p><h3 id="久期的概念"><a href="#久期的概念" class="headerlink" title="久期的概念"></a>久期的概念</h3><p>久期也称持续期，是1938年由 F.R .Macaulay 提出的。它是以未来时间发生的现金流，按照目前的收益率折现成现值，再用每笔现值乘以其距离债券到期日的年限求和，然后以这个总和除以债券目前的价格得到的数值。   </p><p>通俗的解释一下，近似看成是债券的剩余年限就OK了。<br>债券的修正久期=久期/（1+YTM），我个人直接忽略之，直接用债券的剩余年限代替。</p><p>理论上，债券的ytm每上升（下降）1%，债券的价格就会跌(涨)1%*久期 </p><ol><li><a href="https://zhuanlan.zhihu.com/p/23526093" target="_blank" rel="noopener">债券投资入门篇</a></li><li><a href="http://www.taolituan.com/172.html" target="_blank" rel="noopener">集思录：债券投资基础知识</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 投资 </tag>
            
            <tag> 债券 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>FaaS的材料收集</title>
      <link href="/dipublog/2020/03/18/mysubdir/faas-collect/"/>
      <url>/dipublog/2020/03/18/mysubdir/faas-collect/</url>
      
        <content type="html"><![CDATA[<h2 id="资料整理"><a href="#资料整理" class="headerlink" title="资料整理"></a>资料整理</h2><ol><li><a href="https://cloud.tencent.com/developer/article/1401432" target="_blank" rel="noopener">Function as a Service介绍</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> FaaS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo的SEO优化</title>
      <link href="/dipublog/2020/03/15/mysubdir/hexo-seo-collect/"/>
      <url>/dipublog/2020/03/15/mysubdir/hexo-seo-collect/</url>
      
        <content type="html"><![CDATA[<h2 id="SEO优化的链接收集"><a href="#SEO优化的链接收集" class="headerlink" title="SEO优化的链接收集"></a>SEO优化的链接收集</h2><ul><li><a href="https://www.jianshu.com/p/509df74d24f0" target="_blank" rel="noopener">简书：Hexo SEO设置</a></li><li><a href="https://blog.csdn.net/lzy98/article/details/81140704" target="_blank" rel="noopener">CSDN:HEXO SEO 高级优化</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> SEO优化 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>量化投资的资金仓位管理策略</title>
      <link href="/dipublog/2020/03/11/mysubdir/quatumn-money-management/"/>
      <url>/dipublog/2020/03/11/mysubdir/quatumn-money-management/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://www.zhihu.com/question/37913504/answer/707857767" target="_blank" rel="noopener">知乎文章：量化投资中有哪些仓位管理</a></li><li><a href="https://www.jianshu.com/p/7afdd2700ce9" target="_blank" rel="noopener">主流量化投资策略与Smart Beta策略剖析</a>—文章有点深度。</li><li><a href="https://www.imooc.com/read/13?mc_marking=eac701b9285ff17d6c6237fd509128f7&mc_channel=shouji" target="_blank" rel="noopener">慕课网：教你用 Python 进阶量化交易</a></li><li><a href="https://blog.csdn.net/weixin_42219751/article/details/98197669" target="_blank" rel="noopener">量化经典问题——多因子选股模型</a></li><li><a href="https://www.joinquant.com/view/community/detail/8ab44be934b049fb72a3e0881f922fde" target="_blank" rel="noopener">动态情景多因子Alpha模型</a></li><li><a href="https://www.joinquant.com/view/community/detail/469e185e2c1967938290223520a6eb9d" target="_blank" rel="noopener">凯利公式，你用对了吗？利用该公式进行仓位管理是不错的思路</a></li><li><a href="https://zhuanlan.zhihu.com/p/31799756" target="_blank" rel="noopener">Quantitative Finance 杂志关于量化交易领域排名前十的文章</a></li></ol><h2 id="量化交易的网站"><a href="#量化交易的网站" class="headerlink" title="量化交易的网站"></a>量化交易的网站</h2><ol><li>聚宽，国内量化平台的创导者，专注于金融量化工具和智能投顾的原创技术，是中国领先的金融科技公司。<a href="https://www.joinquant.com/" target="_blank" rel="noopener">JoinQuant</a></li><li><a href="https://bigquant.com" target="_blank" rel="noopener">BigQuant人工智能量化平台</a>是四川的一家公司<a href="https://bigai.cn" target="_blank" rel="noopener">宽邦科技</a>运营的一个量化交易平台</li><li><a href="https://zhuanlan.zhihu.com/p/26368398" target="_blank" rel="noopener">知乎：史上最全Quant资源整理</a>的确是一个好东西，花了不少时间整理，值得学习。</li><li><a href="https://uqer.io/" target="_blank" rel="noopener">优矿</a>位于上海的一家机构</li><li><a href="http://quant.10jqka.com.cn/platform/html/home.html" target="_blank" rel="noopener">同花顺量化交易</a></li><li><a href="https://www.ricequant.com/welcome/" target="_blank" rel="noopener">米宽科技量化交易平台 </a></li></ol><h2 id="Data"><a href="#Data" class="headerlink" title="Data"></a>Data</h2><ol><li>美国国债收益率曲线<a href="https://www.treasury.gov/resource-center/data-chart-center/interest-rates/Pages/TextView.aspx?data=yieldYear&year=2020" target="_blank" rel="noopener">treasury yield curve</a></li><li>Moody’s Seasoned Baa Corporate Bond Yield (BAA)- <a href="https://fred.stlouisfed.org/series/BAA" target="_blank" rel="noopener">美国企业债数据</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 量化投资 </tag>
            
            <tag> 仓位管理 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>数据集资源导航</title>
      <link href="/dipublog/2020/03/11/scrapy/data-sci-collect/"/>
      <url>/dipublog/2020/03/11/scrapy/data-sci-collect/</url>
      
        <content type="html"><![CDATA[<p>大数据处理的知识网站：<br>数据分析三剑客：Numpy、Pandas、Matplotlib  </p><p><a href="https://www.pypandas.cn" target="_blank" rel="noopener">Pandas中文网、Pandas官方中文文档</a><br>Pandas是基于Numpy构建的库，在数据处理方面可以把它理解为numpy加强版，同时Pandas也是一项开源项目 。不同于numpy的是，pandas拥有种数据结构：Series和DataFrame  </p><img src="/dipublog/2020/03/11/scrapy/data-sci-collect/panda-series.jpg" class="" title="pandas"> <a id="more"></a> <img src="/dipublog/2020/03/11/scrapy/data-sci-collect/panda-dataframe.jpg" class="" title="pandas"><p>其中的十分钟入门Pandas可以让你快速了解和学习<a href="https://www.pypandas.cn/docs/getting_started/10min.html#生成对象" target="_blank" rel="noopener">入门</a></p><ol><li><a href="https://zhuanlan.zhihu.com/p/99889912" target="_blank" rel="noopener">十分钟AI知识点】pandas最详细教程</a>  </li><li><a href="https://github.com/awesomedata/awesome-public-datasets" target="_blank" rel="noopener">几百个不同领域的数据集分享</a><br>这份清单涵盖了以下的领域：</li></ol><ul><li>农业</li><li>生物学</li><li>气候+天气</li><li>ComplexNetworks</li><li>计算机网络</li><li>DataChallenges</li><li>地球科学</li><li>经济学</li><li>教育</li><li>能源</li><li>金融</li><li>GIS</li><li>政府</li><li>卫生保健</li><li>图像处理</li><li>机器学习</li><li>博物馆</li><li>自然语言</li><li>神经科学</li><li>物理</li><li>前列腺癌</li><li>心理学+认知</li><li>PublicDomains</li><li>搜索引擎</li><li>社交网络</li><li>社会科学</li><li>软件</li><li>体育</li><li>时间序列</li><li>运输</li><li>补充收藏</li></ul><p>还有经济学相关的数据集：</p><ul><li>美国经济协会（AEA）<a href="https://www.aeaweb.org/resources/data" target="_blank" rel="noopener">Go-&gt;</a></li><li>来自UMD的EconData</li><li>世界经济自由数据</li><li>历史宏观经济统计</li><li>INFORUM - 马里兰大学的行业间预测</li><li>DBnomics - 世界经济数据库 - 聚集了数百个[…]</li><li>国际贸易统计</li><li>互联网产品代码数据库</li><li>联合外债数据中心</li><li>Jon Haveman国际贸易数据链接</li><li>OpenCorporates全球公司数据库</li><li>我们的数据世界</li><li>SciencesPo世界贸易重力数据集</li><li>经济复杂性图集</li><li>国际数据中心</li><li>经济复杂性观察站</li><li>联合国商品贸易统计</li><li>联合国人类发展报告</li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 大数据 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python yield 的用法和意义解析</title>
      <link href="/dipublog/2020/03/08/scrapy/python-yield/"/>
      <url>/dipublog/2020/03/08/scrapy/python-yield/</url>
      
        <content type="html"><![CDATA[<p><a href="https://www.zhihu.com/question/345210030/answer/841903171" target="_blank" rel="noopener">知乎：Python 的关键字 yield 有哪些用法和用途？</a>讲的相对透彻。<br><a href="https://zhuanlan.zhihu.com/p/32178981" target="_blank" rel="noopener">知乎：yield详解</a></p><p>Python的生成器函数为数据和计算资源管理提供了强大的机制，但对于Python初学者而言，理解它们并非易事。<br>很多程序员都学过“惰性计算”以及如何写代码来实现这一操作。但Python语言本身就支持这种计算（只需一个关键词就可轻易实现），这种有效性和表达性在其他程序语言中非常罕见。所以，惰性计算这个概念被引入“拉达姆演算”，而Python尽管并非专门的功能语言（例如Lisp），也体现出功能编程的特性，也就不足为奇了，Python使用闭包函数也是拉达姆演算特性的一部分。</p><a id="more"></a><p>2001年，“PEP 255 — Simple Generators”（<a href="https://www.python.org/dev/peps/pep-0255/）介绍了生成器，提出动机是对惰性计算更加直接的表达：" target="_blank" rel="noopener">https://www.python.org/dev/peps/pep-0255/）介绍了生成器，提出动机是对惰性计算更加直接的表达：</a>  </p><p>当一个生产函数遇到需要保持在产出值之间的状态，面对这一难题，很多程序语言无法提供令人满意的有效解决方案……  </p><img src="/dipublog/2020/03/08/scrapy/python-yield/python-yield.jpg" class="" title="yield机制"> <ul><li>通常的for…in…循环中，in后面是一个数组，这个数组就是一个可迭代对象，类似的还有链表，字符串，文件。它可以是<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mylist = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br></pre></td></tr></table></figure>也可以是<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mylist = [x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>)]</span><br></pre></td></tr></table></figure>它的缺陷是所有数据都在内存中，如果有海量数据的话将会非常耗内存。</li><li>生成器是可以迭代的，但只可以读取它一次。因为用的时候才生成。比如:<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mygenerator = (x*x <span class="keyword">for</span> x <span class="keyword">in</span> range(<span class="number">3</span>))</span><br></pre></td></tr></table></figure>注意这里用到了()，它就不是数组，而上面的例子是[]。</li><li>我理解的生成器(generator)能够迭代的关键是它有一个next()方法，工作原理就是通过重复调用next()方法，直到捕获一个异常。可以用上面的mygenerator测试。</li><li>带有 yield 的函数不再是一个普通函数，而是一个生成器generator，可用于迭代，工作原理同上。</li><li>yield 是一个类似 return 的关键字，迭代一次遇到yield时就返回yield后面的值。重点是：下一次迭代时，从上一次迭代遇到的yield后面的代码开始执行。</li><li>简要理解：yield就是 return 返回一个值，并且记住这个返回的位置，下次迭代就从这个位置后开始。</li><li>带有yield的函数不仅仅只用于for循环中，而且可用于某个函数的参数，只要这个函数的参数允许迭代参数。比如array.extend函数，它的原型是array.extend(iterable)。这个特性让我们在给函数传递参数的时候非常有意思。</li><li>send(msg)与next()的区别在于send可以传递参数给yield表达式，这时传递的参数会作为yield表达式的值，而yield的参数是返回给调用者的值。——换句话说，就是send可以强行修改上一个yield表达式值。比如函数中有一个yield赋值，a<br>= yield 5，第一次迭代到这里会返回5，a还没有赋值。第二次迭代时，使用.send(10)，那么，就是强行修改yield 5表达式的值为10，本来是5的，那么a=10</li><li>send(msg)与next()都有返回值，它们的返回值是当前迭代遇到yield时，yield后面表达式的值，其实就是当前迭代中yield后面的参数。</li><li>第一次调用时必须先next()或send(None)，否则会报错，send后之所以为None是因为这时候没有上一个yield(根据第8条)。可以认为，next()等同于send(None)。</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#encoding:UTF-8  </span></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">yield_test</span><span class="params">(n)</span>:</span>  </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> range(n):  </span><br><span class="line">        <span class="keyword">yield</span> call(i)  </span><br><span class="line">        print(<span class="string">"i="</span>,i)  </span><br><span class="line">    <span class="comment">#做一些其它的事情      </span></span><br><span class="line">    print(<span class="string">"do something."</span>)      </span><br><span class="line">    print(<span class="string">"end."</span>)  </span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">call</span><span class="params">(i)</span>:</span>  </span><br><span class="line">    <span class="keyword">return</span> i*<span class="number">2</span>  </span><br><span class="line"></span><br><span class="line"><span class="comment">#使用for循环  </span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> yield_test(<span class="number">5</span>):  </span><br><span class="line">    print(i,<span class="string">","</span>)</span><br></pre></td></tr></table></figure><p>结果是：</p><blockquote><blockquote><blockquote></blockquote><pre><code>0 ,  i= 0  2 ,  i= 1  4 ,  i= 2  6 ,  i= 3  8 ,  i= 4  do something.  end.  </code></pre><blockquote></blockquote><p>理解的关键在于：下次迭代时，代码从yield的下一跳语句开始执行。 </p></blockquote></blockquote><p>for循环就用到了next(),所以到yield能再执行。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">def</span> <span class="title">node</span>.<span class="title">_get_child_candidates</span><span class="params">(self, distance, min_dist, max_dist)</span>:</span></span><br><span class="line">    <span class="keyword">if</span> self._leftchild <span class="keyword">and</span> distance - max_dist &lt; self._median:</span><br><span class="line">        <span class="keyword">yield</span> self._leftchild</span><br><span class="line">    <span class="keyword">if</span> self._rightchild <span class="keyword">and</span> distance + max_dist &gt;= self._median:</span><br><span class="line">        <span class="keyword">yield</span> self._rightchild</span><br></pre></td></tr></table></figure><p>与前面不同的是，这个函数中没有for循环，但它依然可以用于迭代。<br>node._get_child_candidates函数中有yield，所以它变成了一个迭代器，可以用于迭代。<br>执行第一次迭代时（其实就是调用next()方法），如果有左节点并且距离满足要求，会执行第一个yield，这时会返回self._leftchild并完成第一个迭代。<br>执行第二次迭代时，从第一个yield后面开始，如果有右节点并且距离满足要求，会执行第二个yield，这时会返回self._rightchild并完成第一个迭代。<br>执行第三次迭代时，第二个yield后再无代码，捕获异常，退出迭代。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">result, candidates = list(), [self]</span><br><span class="line"><span class="keyword">while</span> candidates:</span><br><span class="line">    node = candidates.pop()</span><br><span class="line">    distance = node._get_dist(obj)</span><br><span class="line">    <span class="keyword">if</span> distance &lt;= max_dist <span class="keyword">and</span> distance &gt;= min_dist:</span><br><span class="line">        result.extend(node._values)</span><br><span class="line">    candidates.extend(node._get_child_candidates(distance, min_dist, max_dist))</span><br><span class="line"><span class="keyword">return</span> result</span><br></pre></td></tr></table></figure><p>上面的node._get_child_candidates(self, distance, min_dist, max_dist)是放在extend()函数中作为参数的，为什么可以这么用，就因为extend函数的参数不仅仅支持array，只要它是一个迭代器就可以。它的原型是array.extend(iterable)。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爬虫技术Scrapy框架网站收集</title>
      <link href="/dipublog/2020/03/08/scrapy/url-collect/"/>
      <url>/dipublog/2020/03/08/scrapy/url-collect/</url>
      
        <content type="html"><![CDATA[<ol><li><a href="https://github.com/Kr1s77/awesome-python-login-model" target="_blank" rel="noopener">Github开源项目模拟登录一些大型网站</a></li><li><a href="https://colab.research.google.com/notebooks/intro.ipynb#scrollTo=5fCEDCU_qrC0" target="_blank" rel="noopener">谷歌Colaboratory</a>借助 Colaboratory（简称 Colab），您可在浏览器中编写和执行 Python 代码，并且：<ul><li>无需任何配置</li><li>免费使用 GPU</li><li>轻松共享<br>无论您是一名学生、数据科学家还是 AI 研究员，Colab 都能够帮助您更轻松地完成工作。</li></ul></li><li>一个从invest.com获取金融数据的库<a href="https：//investpy.readthedocs.io/index.html">investpy</a></li><li>简书网站上关于Scrapy爬虫的<a href="https://www.jianshu.com/p/43029ea38251" target="_blank" rel="noopener">学习文档</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Python </tag>
            
            <tag> 爬虫 </tag>
            
            <tag> Scrapy </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>VSCode 和 Python 集成环境配置</title>
      <link href="/dipublog/2020/03/05/vscode/vs-python/"/>
      <url>/dipublog/2020/03/05/vscode/vs-python/</url>
      
        <content type="html"><![CDATA[<p><a href="https://code.visualstudio.com/docs/python/environments" target="_blank" rel="noopener">Vscode和Python结合的配置</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> vscode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Flex做CSS布局的方法</title>
      <link href="/dipublog/2020/03/02/mycss/flex/"/>
      <url>/dipublog/2020/03/02/mycss/flex/</url>
      
        <content type="html"><![CDATA[<p>网页布局（layout）是 CSS 的一个重点应用。布局的传统解决方案，基于盒状模型，依赖 display 属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。</p><img src="/dipublog/2020/03/02/mycss/flex/flex1.gif" class="" title="Flex布局"> <p>2009年，W3C 提出了一种新的方案—-Flex 布局，可以简便、完整、响应式地实现各种页面布局。目前，它已经得到了所有浏览器的支持，这意味着，现在就能很安全地使用这项功能。</p><a id="more"></a><p>Flex 布局将成为未来布局的首选方案。本文介绍它的语法，下一篇文章给出常见布局的 Flex 写法。网友 JailBreak 为本文的所有示例制作了 Demo，也可以参考。<br>以下内容主要参考了下面两篇文章：<a href="https://css-tricks.com/snippets/css/a-guide-to-flexbox/" target="_blank" rel="noopener">A Complete Guide to Flexbox</a> 和 <a href="https://scotch.io/tutorials/a-visual-guide-to-css3-flexbox-properties" target="_blank" rel="noopener">A Visual Guide to CSS3 Flexbox Properties</a>。</p><h2 id="Flex布局是什么？"><a href="#Flex布局是什么？" class="headerlink" title="Flex布局是什么？"></a>Flex布局是什么？</h2><p>Flex 是 Flexible Box 的缩写，意为”弹性布局”，用来为盒状模型提供最大的灵活性。任何一个容器都可以指定为 Flex 布局。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>行内元素也可以使用 Flex 布局。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: inline-flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Webkit 内核的浏览器，必须加上-webkit前缀。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">display</span>: -webkit-flex; <span class="comment">/* Safari */</span></span><br><span class="line">  <span class="attribute">display</span>: flex;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>注意，设为 Flex 布局以后，子元素的float、clear和vertical-align属性将失效。</p><h2 id="基本概念"><a href="#基本概念" class="headerlink" title="基本概念"></a>基本概念</h2><p>采用 Flex 布局的元素，称为 Flex 容器（flex container），简称”容器”。它的所有子元素自动成为容器成员，称为 Flex 项目（flex item），简称”项目”。</p><img src="/dipublog/2020/03/02/mycss/flex/flex2.png" class="" title="Flex布局"><p>容器默认存在两根轴：水平的主轴（main axis）和垂直的交叉轴（cross axis）。主轴的开始位置（与边框的交叉点）叫做main start，结束位置叫做main end；交叉轴的开始位置叫做cross start，结束位置叫做cross end。</p><p>项目默认沿主轴排列。单个项目占据的主轴空间叫做main size，占据的交叉轴空间叫做cross size。</p><h2 id="容器的属性"><a href="#容器的属性" class="headerlink" title="容器的属性"></a>容器的属性</h2><p>以下6个属性设置在容器上。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">flex-direction</span></span><br><span class="line"><span class="selector-tag">flex-wrap</span></span><br><span class="line"><span class="selector-tag">flex-flow</span></span><br><span class="line"><span class="selector-tag">justify-content</span></span><br><span class="line"><span class="selector-tag">align-items</span></span><br><span class="line"><span class="selector-tag">align-content</span></span><br></pre></td></tr></table></figure><h3 id="flex-direction属性"><a href="#flex-direction属性" class="headerlink" title="flex-direction属性"></a>flex-direction属性</h3><p>flex-direction属性决定主轴的方向（即项目的排列方向）。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">flex-direction</span>: row | row-reverse | column | column-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/dipublog/2020/03/02/mycss/flex/flex3.png" class="" title="Flex布局"><p>它可能有4个值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">row（默认值）：主轴为水平方向，起点在左端。</span><br><span class="line">row-reverse：主轴为水平方向，起点在右端。</span><br><span class="line">column：主轴为垂直方向，起点在上沿。</span><br><span class="line">column-reverse：主轴为垂直方向，起点在下沿。</span><br></pre></td></tr></table></figure><h3 id="flex-wrap属性"><a href="#flex-wrap属性" class="headerlink" title="flex-wrap属性"></a>flex-wrap属性</h3><p>默认情况下，项目都排在一条线（又称”轴线”）上。flex-wrap属性定义，如果一条轴线排不下，如何换行。</p><img src="/dipublog/2020/03/02/mycss/flex/flex-wrap.png" class="" title="Flex布局"><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span>&#123;</span><br><span class="line">  <span class="attribute">flex-wrap</span>: nowrap | wrap | wrap-reverse;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它可能取三个值。<br>（1）nowrap（默认）：不换行。</p><img src="/dipublog/2020/03/02/mycss/flex/wrap2.png" class="" title="Flex布局"><p>（2）wrap：换行，第一行在上方。</p><img src="/dipublog/2020/03/02/mycss/flex/wrap1.jpg" class="" title="Flex布局"><p>（3）wrap-reverse：换行，第一行在下方。</p><img src="/dipublog/2020/03/02/mycss/flex/wrap3.jpg" class="" title="Flex布局"><h3 id="flex-flow属性"><a href="#flex-flow属性" class="headerlink" title="flex-flow属性"></a>flex-flow属性</h3><p>flex-flow属性是flex-direction属性和flex-wrap属性的简写形式，默认值为row nowrap。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">flex-flow</span>: &lt;flex-direction&gt; || &lt;flex-wrap&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="justify-content属性"><a href="#justify-content属性" class="headerlink" title="justify-content属性"></a>justify-content属性</h3><p>justify-content属性定义了项目在主轴上的对齐方式。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">justify-content</span>: flex-start | flex-end | center | space-between | space-around;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/dipublog/2020/03/02/mycss/flex/justify-content.png" class="" title="Flex布局"><p>它可能取5个值，具体对齐方式与轴的方向有关。下面假设主轴为从左到右。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">flex-start（默认值）：左对齐</span><br><span class="line">flex-end：右对齐</span><br><span class="line">center： 居中</span><br><span class="line">space-between：两端对齐，项目之间的间隔都相等。</span><br><span class="line">space-around：每个项目两侧的间隔相等。所以，项目之间的间隔比项目与边框的间隔大一倍。</span><br></pre></td></tr></table></figure><h3 id="align-items属性"><a href="#align-items属性" class="headerlink" title="align-items属性"></a>align-items属性</h3><p>align-items属性定义项目在交叉轴上如何对齐。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-items</span>: flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/dipublog/2020/03/02/mycss/flex/align.png" class="" title="Flex布局"><ul><li>它可能取5个值。具体的对齐方式与交叉轴的方向有关，下面假设交叉轴从上到下。</li><li>flex-start：交叉轴的起点对齐。</li><li>flex-end：交叉轴的终点对齐。</li><li>center：交叉轴的中点对齐。</li><li>baseline: 项目的第一行文字的基线对齐。</li><li>stretch（默认值）：如果项目未设置高度或设为auto，将占满整个容器的高度。</li></ul><h3 id="align-content属性"><a href="#align-content属性" class="headerlink" title="align-content属性"></a>align-content属性</h3><p>align-content属性定义了多根轴线的对齐方式。如果项目只有一根轴线，该属性不起作用。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.box</span> &#123;</span><br><span class="line">  <span class="attribute">align-content</span>: flex-start | flex-end | center | space-between | space-around | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/dipublog/2020/03/02/mycss/flex/align-content.png" class="" title="Flex布局"><p>该属性可能取6个值。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">flex-start：与交叉轴的起点对齐。</span><br><span class="line">flex-end：与交叉轴的终点对齐。</span><br><span class="line">center：与交叉轴的中点对齐。</span><br><span class="line">space-between：与交叉轴两端对齐，轴线之间的间隔平均分布。</span><br><span class="line">space-around：每根轴线两侧的间隔都相等。所以，轴线之间的间隔比轴线与边框的间隔大一倍。</span><br><span class="line">stretch（默认值）：轴线占满整个交叉轴。</span><br></pre></td></tr></table></figure><h2 id="项目的属性"><a href="#项目的属性" class="headerlink" title="项目的属性"></a>项目的属性</h2><p>以下6个属性设置在项目上。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">order</span><br><span class="line">flex-grow</span><br><span class="line">flex-shrink</span><br><span class="line">flex-basis</span><br><span class="line">flex</span><br><span class="line">align-self</span><br></pre></td></tr></table></figure><h3 id="Order属性"><a href="#Order属性" class="headerlink" title="Order属性"></a>Order属性</h3><p>order属性定义项目的排列顺序。数值越小，排列越靠前，默认为0。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">order</span>: &lt;integer&gt;;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/dipublog/2020/03/02/mycss/flex/order.png" class="" title="Flex布局"><h3 id="flex-grow属性"><a href="#flex-grow属性" class="headerlink" title="flex-grow属性"></a>flex-grow属性</h3><p>flex-grow属性定义项目的放大比例，默认为0，即如果存在剩余空间，也不放大。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-grow</span>: &lt;number&gt;; <span class="comment">/* default 0 */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/dipublog/2020/03/02/mycss/flex/flex-grow.png" class="" title="Flex布局"><p>如果所有项目的flex-grow属性都为1，则它们将等分剩余空间（如果有的话）。如果一个项目的flex-grow属性为2，其他项目都为1，则前者占据的剩余空间将比其他项多一倍。</p><h3 id="flex-shrink属性"><a href="#flex-shrink属性" class="headerlink" title="flex-shrink属性"></a>flex-shrink属性</h3><p>flex-shrink属性定义了项目的缩小比例，默认为1，即如果空间不足，该项目将缩小。</p><p>如果所有项目的flex-shrink属性都为1，当空间不足时，都将等比例缩小。如果一个项目的flex-shrink属性为0，其他项目都为1，则空间不足时，前者不缩小。负值对该属性无效。</p><h3 id="flex-basis属性"><a href="#flex-basis属性" class="headerlink" title="flex-basis属性"></a>flex-basis属性</h3><p>flex-basis属性定义了在分配多余空间之前，项目占据的主轴空间（main size）。浏览器根据这个属性，计算主轴是否有多余空间。它的默认值为auto，即项目的本来大小。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex-basis</span>: &lt;length&gt; | auto; <span class="comment">/* default auto */</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>它可以设为跟width或height属性一样的值（比如350px），则项目将占据固定空间。</p><h3 id="flex属性"><a href="#flex属性" class="headerlink" title="flex属性"></a>flex属性</h3><p>flex属性是flex-grow, flex-shrink 和 flex-basis的简写，默认值为0 1 auto。后两个属性可选。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">flex</span>: none | [ &lt;<span class="string">'flex-grow'</span>&gt; &lt;<span class="string">'flex-shrink'</span>&gt;? || &lt;<span class="string">'flex-basis'</span>&gt; ]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>该属性有两个快捷值：auto (1 1 auto) 和 none (0 0 auto)。</p><p>建议优先使用这个属性，而不是单独写三个分离的属性，因为浏览器会推算相关值。</p><h3 id="align-self属性"><a href="#align-self属性" class="headerlink" title="align-self属性"></a>align-self属性</h3><p>align-self属性允许单个项目有与其他项目不一样的对齐方式，可覆盖align-items属性。默认值为auto，表示继承父元素的align-items属性，如果没有父元素，则等同于stretch。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.item</span> &#123;</span><br><span class="line">  <span class="attribute">align-self</span>: auto | flex-start | flex-end | center | baseline | stretch;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><img src="/dipublog/2020/03/02/mycss/flex/align-self.png" class="" title="Flex布局"><p>该属性可能取6个值，除了auto，其他都与align-items属性完全一致。</p>]]></content>
      
      
      
        <tags>
            
            <tag> CSS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo子目录下生成文章</title>
      <link href="/dipublog/2020/03/01/mysubdir/s1/"/>
      <url>/dipublog/2020/03/01/mysubdir/s1/</url>
      
        <content type="html"><![CDATA[<h2 id="日本保健品行业洞察"><a href="#日本保健品行业洞察" class="headerlink" title="日本保健品行业洞察"></a>日本保健品行业洞察</h2><div class="pdf" target="./japanese-baojian.pdf" height=""></div><h2 id="测试子目录管理文章"><a href="#测试子目录管理文章" class="headerlink" title="测试子目录管理文章"></a>测试子目录管理文章</h2><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;文章名&quot; -p subdir-name&#x2F;file-name</span><br></pre></td></tr></table></figure><ol><li><a href="https://zhuanlan.zhihu.com/p/38279377" target="_blank" rel="noopener">凯利公式，从赌场到量化投资</a></li><li><a href="https://www.myquant.cn" target="_blank" rel="noopener">掘金量化</a></li></ol><h2 id="设置标签"><a href="#设置标签" class="headerlink" title="设置标签"></a>设置标签</h2><p>在编辑文章的时候，tags:后面是设置标签的地方，如果有多个标签的话，可以用下面两种办法来设置：<br>第一种：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">tags: [标签1,标签2,...标签n]</span><br></pre></td></tr></table></figure><p>第二种：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"> tages: </span><br><span class="line">- 标签1</span><br><span class="line">- 标签2</span><br><span class="line">...</span><br><span class="line">- 标签n</span><br></pre></td></tr></table></figure><h2 id="设置分类列表"><a href="#设置分类列表" class="headerlink" title="设置分类列表"></a>设置分类列表</h2><p>在我们编辑文章的时候，直接在categories:项填写属于哪个分类，但如果分类是中文的时候，路径也会包含中文。</p><p>比如分类我们设置的是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">categories: 开车</span><br></pre></td></tr></table></figure><p>那在生成页面后，分类列表就会出现开车这个选项，他的访问路径是：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">*&#x2F;categories&#x2F;开车</span><br></pre></td></tr></table></figure><p>我们都知道，有时候中文路径可能会出现一些奇奇怪怪的问题，所以我们需要路径名和分类名分别设置。</p><p>打开站点配置文件_config.yml，找到如下位置做更改：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"># Category &amp; Tag</span><br><span class="line">default_category: uncategorized</span><br><span class="line">category_map:</span><br><span class="line">    开车: drive</span><br><span class="line">    生活: life</span><br><span class="line">    其他: other</span><br><span class="line">tag_map:</span><br></pre></td></tr></table></figure><blockquote><blockquote></blockquote><p>在这里category_map:是设置分类的地方，每行一个分类，冒号前面是分类名称，后面是访问路径。可以提前在这里设置好一些分类，当编辑的文章填写了对应的分类名时，就会自动的按照对应的路径来访问。</p><blockquote></blockquote></blockquote>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Vue学习笔记</title>
      <link href="/dipublog/2020/02/28/Vue-study/"/>
      <url>/dipublog/2020/02/28/Vue-study/</url>
      
        <content type="html"><![CDATA[<h2 id="下载安装Vue的开发环境"><a href="#下载安装Vue的开发环境" class="headerlink" title="下载安装Vue的开发环境"></a>下载安装Vue的开发环境</h2><p>  基础需要：一个一个到官方网站根据要求在系统中安装。</p><ul><li>node.js <a href="https://nodejs.org/zh-cn/" target="_blank" rel="noopener">node官方网站</a></li><li>cnpm <a href="http://npm.taobao.org" target="_blank" rel="noopener">淘宝npm中国镜像网站</a></li><li>vue <a href="https://cn.vuejs.org" target="_blank" rel="noopener">vue官方网站</a></li><li>vue-cli <a href="https://cli.vuejs.org/zh/" target="_blank" rel="noopener">Vue.js 开发的标准工具</a></li></ul><h2 id="初始化一个vue项目"><a href="#初始化一个vue项目" class="headerlink" title="初始化一个vue项目"></a>初始化一个vue项目</h2><p>  命令行执行：vue init webpack todo-vue 初始化一个名称为 todo-vue的项目。<br>  <img src="/dipublog/2020/02/28/Vue-study/vue-init-dir.png" class="" title="项目的目录结构图">  </p>]]></content>
      
      
      <categories>
          
          <category> 网站技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Vue </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Git精选文章</title>
      <link href="/dipublog/2020/02/23/git-good-article/"/>
      <url>/dipublog/2020/02/23/git-good-article/</url>
      
        <content type="html"><![CDATA[<h2 id="GIT"><a href="#GIT" class="headerlink" title="GIT"></a>GIT</h2><p>Git本地和远程各种命令之间的关系图示  </p><img src="/dipublog/2020/02/23/git-good-article/git-command.png" class="" title="git图示">   <p><a href="https://yangbingdong.com/2017/note-of-learning-git/" target="_blank" rel="noopener">Git学习笔记</a>  </p><p><a href="http://www.amdoing.com/static-site-generator-hexo-gitbook-vuepress-and-so-on/" target="_blank" rel="noopener">静态网站生成器Hexo、Gitbook、Vuepress、Docsify、Docute、Nuxt</a>  </p><p><a href="https://zhuanlan.zhihu.com/p/33350221" target="_blank" rel="noopener">使用 Nuxt.js 搭建静态博客</a>  </p><p><a href="https://my.oschina.net/editorial-story/blog/1596258?nocache=1514944531873" target="_blank" rel="noopener">2017 年，最热开源静态网站生成器 TOP 20 揭晓</a>  </p><p><a href="https://www.staticgen.com/" target="_blank" rel="noopener">网站静态生成器清单和热度比较</a><br><a href="https://cloud.tencent.com/developer/article/1142260" target="_blank" rel="noopener">Hexo优化 — 利用 Markdown 语法画流程图</a>  </p><p>  Hexo MarkDown <a href="https://mecono.cn/2578632585.html" target="_blank" rel="noopener">语法示例</a><br>  特殊的流程图和序列图的显示和书写</p><h2 id="VUE"><a href="#VUE" class="headerlink" title="VUE"></a>VUE</h2><p><a href="https://www.ctolib.com/mip/topics-143037.html?tt_from=copy_link&utm_source=copy_link&utm_medium=toutiao_ios&utm_campaign=client_share" target="_blank" rel="noopener">Vue友最爱的10个开箱即用的开源项目</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>about-github-pages</title>
      <link href="/dipublog/2020/02/20/about-github-pages/"/>
      <url>/dipublog/2020/02/20/about-github-pages/</url>
      
        <content type="html"><![CDATA[<p>我们可以使用Github的仓库托管关于自己个人博客、组织或者项目的网站。</p><p>本文将介绍Github Pages站点的基本概念：</p><ul><li>了解Github Pages</li><li>Github Pages网站的类型</li><li>GitHub Pages 站点的发布来源</li><li>静态网站生成器<a id="more"></a></li></ul><h2 id="了解Github-Pages"><a href="#了解Github-Pages" class="headerlink" title="了解Github Pages"></a>了解Github Pages</h2><p>GitHub Pages是一个静态站点托管服务，可直接从GitHub上的存储库获取HTML，CSS和JavaScript文件，还可以选择在构建过程中运行这些文件并发布网站。您可以将站点托管在GitHub的github.io域或您自己的自定义域上。</p><h2 id="Github-Pages网站的类型"><a href="#Github-Pages网站的类型" class="headerlink" title="Github Pages网站的类型"></a>Github Pages网站的类型</h2><p>有三种类型的 GitHub Pages 站点：项目、用户和组织。 项目站点连接到 GitHub 上托管的特定项目，例如 JavaScript 库。 用户和组织站点连接到特定的 GitHub 帐户。</p><p>用户和组织站点始终从名为 <user>.github.io 或 <organization>.github.io 的仓库发布。 除非您使用自定义域，否则用户和组织站点位于 http(s)://<username>.github.io 或 http(s)://<organization>.github.io。</p><p>项目站点的源文件与其项目存储在同一个仓库中。 除非您使用自定义域，否则项目站点位于 http(s)://<user>.github.io/<repository> 或 http(s)://<organization>.github.io/<repository>。</p><p>您只能为每个 GitHub 账户创建一个用户或组织站点。 项目站点（无论是组织还是用户帐户拥有）没有限制。</p><h2 id="GitHub-Pages-站点的发布来源"><a href="#GitHub-Pages-站点的发布来源" class="headerlink" title="GitHub Pages 站点的发布来源"></a>GitHub Pages 站点的发布来源</h2><p>GitHub Pages 站点的发布来源是存储站点源文件的分支或文件夹。 所有站点都有默认的发布来源，项目站点还有其他可用的发布来源。</p><p>用户和组织站点的默认发布来源是 master 分支。 如果用户和组织站点的仓库是 master 分支，您的站点将从该分支自动发布。 您无法为用户或组织站点选择不同的发布来源。</p><p>项目站点的默认发布来源是 gh-pages 分支。 如果项目站点的仓库有 gh-pages 分支，您的站点将从该分支自动发布。</p><p>项目站点也可以从 master 分支或 master 分支上的 /docs 文件夹发布。 要从这些来源之一发布站点，您必须配置不同的发布来源。 </p><p>如果选择 master 分支的 /docs 文件夹作为您的发布来源，GitHub Pages 将读取 /docs 文件夹中的所有内容以发布您的站点（包括 CNAME 文件）。例如，当您通过 GitHub Pages 设置编辑自定义域时，该自定义域将写入 /docs/CNAME。</p><h2 id="静态网站生成器"><a href="#静态网站生成器" class="headerlink" title="静态网站生成器"></a>静态网站生成器</h2><p>GitHub Pages 会发布您推送到仓库的任何静态文件。 您可以创建自己的静态文件或使用静态站点生成器为您构建站点。 您还可以在本地或其他服务器上自定义自己的构建过程。 我们建议使用 Jekyll，它是一个静态站点生成器，内置 GitHub Pages 支持和简化的构建流程。</p><p>默认情况下，GitHub Pages 将使用 Jekyll 来构建您的站点。 如果您想使用除 Jekyll 以外的静态站点生成器，通过在发布来源的根目录中创建一个名为 .nojekyll 的空文件来禁用 Jekyll 构建过程，然后按照静态站点生成器的说明在 本地构建站点。</p><p>GitHub Pages 不支持服务器端语言，例如 PHP、Ruby 或 Python。</p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客站点收集</title>
      <link href="/dipublog/2020/02/18/hexo-blog-case1/"/>
      <url>/dipublog/2020/02/18/hexo-blog-case1/</url>
      
        <content type="html"><![CDATA[<blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.  </p><footer><strong>David Levithan</strong><cite>Wide Awake</cite></footer></blockquote>  <p>以上是关于引用语句的特别用法  </p><figure class="highlight objc"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">  </span><br><span class="line">[rectangle setX: <span class="number">10</span> y: <span class="number">10</span> width: <span class="number">20</span> height: <span class="number">20</span>];  </span><br></pre></td></tr></table></figure>  <img src="/dipublog/2020/02/18/hexo-blog-case1/blog-list.png" class="" title="博客内容"><h2 id="收集的关于Hexo-和-NexT主题的相关比较有价值的文章，提供给需要学习技巧的人看看。"><a href="#收集的关于Hexo-和-NexT主题的相关比较有价值的文章，提供给需要学习技巧的人看看。" class="headerlink" title="收集的关于Hexo 和 NexT主题的相关比较有价值的文章，提供给需要学习技巧的人看看。"></a>收集的关于Hexo 和 NexT主题的相关比较有价值的文章，提供给需要学习技巧的人看看。</h2><ol><li><a href="https://github.com/hexojs/awesome-hexo" target="_blank" rel="noopener">Awesome Hexo，一个Hexo博客的专业资源列表</a></li><li><a href="https://io-oi.me/tech/hexo-next-optimization/" target="_blank" rel="noopener">打造个性超赞博客 Hexo + NexT + GitHub Pages 的超深度优化</a></li><li><a href="http://www.ehcoo.com/seo.html" target="_blank" rel="noopener">Hexo-next百度和谷歌搜索优化</a></li><li><a href="https://segmentfault.com/a/1190000006110417" target="_blank" rel="noopener">如何优雅的选择字体(font-family)</a></li><li><a href="http://theme-next.iissnan.com" target="_blank" rel="noopener">NexT主题的设置和配置</a>专门讲述这个主题的问题，学习和进阶配置</li><li><a href="https://segmentfault.com/a/1190000009544924" target="_blank" rel="noopener">segmentfault: hexo的next主题个性化配置教程</a></li><li><a href="http://blog.fiftykg.com/hexo/hexo-next-主题持续升级-更新方案.html" target="_blank" rel="noopener">hexo next 主题持续升级/更新方案</a></li><li><a href="https://www.jianshu.com/p/4f9fc8aafe15" target="_blank" rel="noopener">hexo高阶教程：教你怎么让你的hexo博客在搜索引擎中排第一</a></li><li><a href="https://www.dazhuanlan.com/2019/12/16/5df69eba9ed3c/" target="_blank" rel="noopener">hexo常见问的解决</a></li><li><a href="https://wiki.jikexueyuan.com/project/hexo-document/" target="_blank" rel="noopener">Hexo中文开发手册</a>国人整理，写的比官方文档易懂一些</li><li><a href="https://zhuanlan.zhihu.com/p/111796666?from_voters_page=true" target="_blank" rel="noopener">Hexo 双线部署到 Coding 和 GitHub 提升访问速度</a>知乎文章参考价值不错，对于部署到coding.net 可以看看</li></ol><h2 id="NexT的学习和参考"><a href="#NexT的学习和参考" class="headerlink" title="NexT的学习和参考"></a>NexT的学习和参考</h2><ol><li><a href="http://theme-next.iissnan.com/" target="_blank" rel="noopener">NexT配置和优化中国站点</a></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> NexT主题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo站点部署到Github</title>
      <link href="/dipublog/2020/02/16/hexo-with-git/"/>
      <url>/dipublog/2020/02/16/hexo-with-git/</url>
      
        <content type="html"><![CDATA[<h2 id="参考阅读的材料"><a href="#参考阅读的材料" class="headerlink" title="参考阅读的材料"></a>参考阅读的材料</h2><ul><li><a href="https://www.jianshu.com/p/cb0750324e26" target="_blank" rel="noopener">使用Hexo搭建GitHub博客（2018年Mac版）</a></li><li><a href="https://www.jianshu.com/p/c07ccdfba068" target="_blank" rel="noopener">用Hexo-nexT-GitHub搭建个人博客</a> -文章很长，其中对Git的命令对不同位置仓库的影响图示很清晰。</li><li><a href="https://www.jianshu.com/p/efaf72aab32e" target="_blank" rel="noopener">Hexo 博客从搭建部署到SEO优化等详细教程</a></li><li><a href="https://master--epic-hypatia-977c29.netlify.com/2018/08/25/hexo-learn" target="_blank" rel="noopener">hexo高级部署教程,利用github+netlify部署</a> 这里讲了需要用多分支的问题，很有道理</li><li><a href="https://yangbingdong.com/2017/build-blog-hexo-advanced/" target="_blank" rel="noopener">基于Hexo搭建个人博客——进阶篇(从入门到入土)</a> 谈到了关于文章加密访问的方法；主页文章添加阴影效果；SEO优化内容；</li></ul><h2 id="本地环境的配置安装"><a href="#本地环境的配置安装" class="headerlink" title="本地环境的配置安装"></a>本地环境的配置安装</h2><ol><li>在本地安装git</li><li>在本地安装好HEXO的基础环境Node.js</li><li>在本地安装Hexo</li></ol><h2 id="准备好Github的账户以及相关信息"><a href="#准备好Github的账户以及相关信息" class="headerlink" title="准备好Github的账户以及相关信息"></a>准备好Github的账户以及相关信息</h2><ol><li>注册github网站的账户</li><li>新建一个git仓库</li><li></li></ol><h2 id="链接Hexo-和-Git"><a href="#链接Hexo-和-Git" class="headerlink" title="链接Hexo 和 Git"></a>链接Hexo 和 Git</h2><ol><li>配置Git的用户名和邮件地址</li><li>配置公钥和私钥</li><li>安装插件hexo-deploy-git</li><li></li></ol><p><a href="https://zhuanlan.zhihu.com/p/58654392" target="_blank" rel="noopener">Hexo部署到阿里云</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Github </tag>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo打造个人博客网站</title>
      <link href="/dipublog/2020/02/16/hexo-blog-setup/"/>
      <url>/dipublog/2020/02/16/hexo-blog-setup/</url>
      
        <content type="html"><![CDATA[<h2 id="修改文章底部的那个带-号的标签"><a href="#修改文章底部的那个带-号的标签" class="headerlink" title="修改文章底部的那个带#号的标签"></a>修改文章底部的那个带#号的标签</h2><p>实现的效果<img src="/dipublog/2020/02/16/hexo-blog-setup/xiaoguo.png" class="" title="标签效果"></p><p>具体实现的方法</p><p>修改模板的配置文件_config.yml，找到其中的 tag_icon:false 修改成 true</p><h2 id="开启标签菜单项"><a href="#开启标签菜单项" class="headerlink" title="开启标签菜单项"></a>开启标签菜单项</h2><p>缺省的状态下，博客网站导航菜单中只显示【首页】【归档】俩个菜单项目，为了增加【标签】菜单项目，可以按照如下操作：</p><ol><li><p>在终端执行：hexo new page “tags”</p></li><li><p>修改Next皮肤模板的配置文件_config.yml，找到其中的 #tags: /tags/ || tags，将前面的 # 注释符号去掉。严重提醒：在冒号和/之间一定要有空格。</p></li><li><p>编辑tags/index.md文件，内容如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">title: &quot;tags&quot;</span><br><span class="line">type: tags</span><br><span class="line">layout: &quot;tags&quot;</span><br></pre></td></tr></table></figure><p>重点关注layout选项的设置内容。里面的参数对应的是你主题文件夹下 layout 文件夹下第一级的布局文件。比如，我的主题是用 ejs 写的，那么对应的就是 layout/tags.ejs，如果没有，那么就会出现空白的现象！如果你的 tags 文件的命名时 a.ejs，那么你就应该写成 layout: “a”</p></li><li><p>编辑 hexo 配置文件 Directory 选项。检查一下名称是否对应。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"># Directory</span><br><span class="line">tag_dir: tags</span><br></pre></td></tr></table></figure></li><li><p>实现的效果<img src="/dipublog/2020/02/16/hexo-blog-setup/xiaoguo-1.png" class="" title="标签效果"></p></li></ol>]]></content>
      
      
      <categories>
          
          <category> Hexo </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>图片测试博客-Python资源归集</title>
      <link href="/dipublog/2020/02/15/hello-image/"/>
      <url>/dipublog/2020/02/15/hello-image/</url>
      
        <content type="html"><![CDATA[<h2 id="一图一世界"><a href="#一图一世界" class="headerlink" title="一图一世界"></a>一图一世界</h2><img src="/dipublog/2020/02/15/hello-image/green-leaf.jpeg" class="" title="图片在哪里"> <p>关于图片的说明和解释可以在这里。</p><p>今天看了很多关于<a href="https://lianzhaowen.github.io/p/1901963984.html" target="_blank" rel="noopener">博客网站架设流程</a>的文章。也是自己尝试Hexo的主要原因。</p><ul><li><a href="http://xyua.top/Hexo/hexo_next_blog.html" target="_blank" rel="noopener">Hexo+NexT 打造一个炫酷博客</a></li><li><a href="https://github.com/huiwang/hexo-recommended-posts" target="_blank" rel="noopener">Hexo跨博客文章推荐插件</a></li><li><a href="https://blog.uuk4.com/" target="_blank" rel="noopener">平凡的网站</a>包含了<a href="https://blog.uuk4.com/2019/05/09/hexo%E4%B8%AD%E6%8F%92%E5%85%A5%E6%95%B0%E5%AD%A6%E5%85%AC%E5%BC%8F/" target="_blank" rel="noopener">插入数学公式的问题</a></li><li><a href="https://www.simon96.online/2018/10/12/hexo-tutorial/" target="_blank" rel="noopener">遇见西门网站：最全Hexo博客搭建+主题优化+插件配置+常用操作+错误分析</a></li><li><a href="https://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener">简书文章：hexo的next主题个性化教程:打造炫酷网站</a></li><li><a href="https://zhuanlan.zhihu.com/p/26625249" target="_blank" rel="noopener">知乎：GitHub+Hexo 搭建个人网站详细教程</a></li></ul><h2 id="Python的资源归集"><a href="#Python的资源归集" class="headerlink" title="Python的资源归集"></a>Python的资源归集</h2><p><a href="https://awesome-python.com/#algorithms-and-design-patterns" target="_blank" rel="noopener">Awesome Python</a>是一个关于Python框架、库、软件和资源的专业分类列表，经过精心挑选和维护在Github上发布</p><h2 id="强大的Hexo皮肤模板"><a href="#强大的Hexo皮肤模板" class="headerlink" title="强大的Hexo皮肤模板"></a>强大的Hexo皮肤模板</h2><p><a href="https://github.com/theme-next/hexo-theme-next/blob/master/docs/zh-CN/README.md" target="_blank" rel="noopener">hexo-theme-nexT</a></p><ul><li>采用了这个模板的网站样式 <a href="https://leaferx.online/2019/09/03/cornerstone-2-unicode/" target="_blank" rel="noopener">Leafer X LAB</a></li><li>还有这个<a href="https://theme-next.org/" target="_blank" rel="noopener">nexT Theme for Hexo</a></li></ul><h2 id="Python的博客系统"><a href="#Python的博客系统" class="headerlink" title="Python的博客系统"></a>Python的博客系统</h2><p><a href="https://github.com/OhYee/OBlog" target="_blank" rel="noopener">OBlog</a> 是基于flask的博客系统，后端使用了flask、jieba、sqlite3 前端使用了Vue.js、jquery、bootstrap、highlight.js、lightbox.js、waterfall.js、mathjax.js 。但是作者比较懒，很久没有更新并持续优化了。markdown是自己写的渲染器</p><h2 id="忍不住要记录"><a href="#忍不住要记录" class="headerlink" title="忍不住要记录"></a>忍不住要记录</h2><p><a href="https://yihui.org" target="_blank" rel="noopener">谢益辉的个人主页</a><br><a href="https://github.com/chinese-poetry/chinese-poetry" target="_blank" rel="noopener">chinese-poetry: 最全中文诗歌古典文集数据库</a></p>]]></content>
      
      
      <categories>
          
          <category> Python </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 图片 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo中的Markdown文件里图片的显示问题</title>
      <link href="/dipublog/2020/02/15/hexo-image-markdown/"/>
      <url>/dipublog/2020/02/15/hexo-image-markdown/</url>
      
        <content type="html"><![CDATA[<p>hexo的博客系统默认无法自动处理文章中插入本地图片的问题。需要通过扩展的插件来完成图片支持。</p><h2 id="图片路径设置"><a href="#图片路径设置" class="headerlink" title="图片路径设置"></a>图片路径设置</h2><p>配置_config.yml文件里面的 post_asset_folder:false 这个选项为 true。</p><p>安装<a href="https://github.com/7ym0n/hexo-asset-image" target="_blank" rel="noopener">hexo-asset-image</a>插件，运行hexo n “xxx”来生成新的博客文章时候，/source/_posts文件夹内除了 xxx.md文件之外，还会有一个同名的文件夹，把需要在md文件中显示的图片放入该文件夹。使用!就可以插入图片。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><p>如果觉得速度太慢，可以从淘宝的镜像站点，cnpm站点安装该插件的程序包。前提是你要安装好了<a href="https://npm.taobao.org" target="_blank" rel="noopener">cnpm</a>。</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install hexo-asset-image --save</span><br></pre></td></tr></table></figure><h2 id="hexo-asset-image插件的问题"><a href="#hexo-asset-image插件的问题" class="headerlink" title="hexo-asset-image插件的问题"></a>hexo-asset-image插件的问题</h2><p>由于hexo3版本后对很多插件支持有问题，hexo-asset-image插件在处理data.permalink链接时出现路径错误，把年月去掉了，导致最后生成的路径为%d/xxx/xxx需要对其做兼容处理。通过判断当前版本是否等于3的版本做不同的路径分割。</p><h2 id="该方法经过尝试存在BUG，不建议使用"><a href="#该方法经过尝试存在BUG，不建议使用" class="headerlink" title="该方法经过尝试存在BUG，不建议使用"></a>该方法经过尝试存在BUG，不建议使用</h2><p>参考另外一个博客中图片的使用方法【图片测试博客】<a href="/dipublog/2020/02/15/hello-image/" title="图片测试文章">图片测试文章</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>clone hexo project to local</title>
      <link href="/dipublog/2020/01/31/clone-hexo-project-to-local/"/>
      <url>/dipublog/2020/01/31/clone-hexo-project-to-local/</url>
      
        <content type="html"><![CDATA[<h2 id="from-where"><a href="#from-where" class="headerlink" title="from where"></a>from where</h2><h2 id="how-to-setup-local-enviroment"><a href="#how-to-setup-local-enviroment" class="headerlink" title="how to setup local enviroment"></a>how to setup local enviroment</h2><h2 id="git-command"><a href="#git-command" class="headerlink" title="git command"></a>git command</h2><h2 id="SKILL-by-other"><a href="#SKILL-by-other" class="headerlink" title="SKILL by other"></a>SKILL by other</h2><ol><li><a href="https://zhuanlan.zhihu.com/p/94038688" target="_blank" rel="noopener">hexo next 主题进阶设置</a></li></ol>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>读书《农夫哲学-关于大自然与生死的沉思》</title>
      <link href="/dipublog/2020/01/31/read-book/"/>
      <url>/dipublog/2020/01/31/read-book/</url>
      
        <content type="html"><![CDATA[<h2 id="2020年春节的生死考验"><a href="#2020年春节的生死考验" class="headerlink" title="2020年春节的生死考验"></a>2020年春节的生死考验</h2><h2 id="洛格-斯登这个人"><a href="#洛格-斯登这个人" class="headerlink" title="洛格-斯登这个人"></a>洛格-斯登这个人</h2><h2 id="上帝是一朵纯红鸢尾花"><a href="#上帝是一朵纯红鸢尾花" class="headerlink" title="上帝是一朵纯红鸢尾花"></a>上帝是一朵纯红鸢尾花</h2><p><a href="https://geek.wasai.org/" target="_blank" rel="noopener">极客电台</a>倡导geek生活方式，挺有意思的一个网站，会员费居然要299，各种极客破解密法<br><a href="https://since1989.org/" target="_blank" rel="noopener">我是王掌柜</a>新闻酸菜馆|极客电台|自媒体联盟</p>]]></content>
      
      
      
        <tags>
            
            <tag> 读书笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>你好新世界</title>
      <link href="/dipublog/2020/01/30/hello-world/"/>
      <url>/dipublog/2020/01/30/hello-world/</url>
      
        <content type="html"><![CDATA[<p>无比喜悦地使用 <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! 这是第一篇博客文章。前往 <a href="https://hexo.io/docs/" target="_blank" rel="noopener">说明文档</a> 获取更多的信息。 如果在使用Hexo的过程中发现任何问题，你可以到<a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> 中找到答案或者你可以去<a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a> 向开发人员提问。</p><p>&emsp;&emsp; 春天来了，又到了万物复苏的季节。</p><p>&amp;emsp; 代表全角空格 &amp;ensp; 代表半角空格</p><h2 id="快速开始"><a href="#快速开始" class="headerlink" title="快速开始"></a>快速开始</h2><h3 id="发表一篇新的文章"><a href="#发表一篇新的文章" class="headerlink" title="发表一篇新的文章"></a>发表一篇新的文章</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>更多信息参考： <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="启动网站服务器"><a href="#启动网站服务器" class="headerlink" title="启动网站服务器"></a>启动网站服务器</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>更多信息参考： <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="生产静态文件"><a href="#生产静态文件" class="headerlink" title="生产静态文件"></a>生产静态文件</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>更多信息参考： <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="部署内容到远程的站点"><a href="#部署内容到远程的站点" class="headerlink" title="部署内容到远程的站点"></a>部署内容到远程的站点</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>更多信息参考： <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p><h3 id="Markdown语法"><a href="#Markdown语法" class="headerlink" title="Markdown语法"></a>Markdown语法</h3><ul><li>分段：两个回车,注意：换行不是分段的标识，空行才是</li><li>换行：两个空格加回车</li><li>引用：&gt;<blockquote><p>这是引用的文字效果和显示，如何分成两行</p></blockquote></li><li>转义：针对&gt;需要转义的一些场合<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">\&lt;</span><br><span class="line">&lt;</span><br><span class="line">&amp;#60;</span><br></pre></td></tr></table></figure></li><li>标题：标题 # ~ ###### 井号的个数表示几级标题，即Markdown可以表示一级标题到六级标题</li><li>列表：*，+， -，1. 四个任选其一都可以，注意后面的空格</li><li>强调：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**文字**， __文字__, _文字_, *文字*, ~~删除文字~~</span><br></pre></td></tr></table></figure>效果：<strong>文字</strong>， <strong>文字</strong>, <em>文字</em>, <em>文字</em>, <del>删除文字</del></li><li>图片的使用：<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% asset_img xxxx.jpeg 图片说明文字 %&#125;</span><br></pre></td></tr></table></figure></li><li>分级显示的代码和效果<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">+ Level1</span><br><span class="line">  + level2</span><br><span class="line">    + level3</span><br></pre></td></tr></table></figure></li></ul><ul><li>Level1<ul><li>level2<ul><li>level3 </li></ul></li></ul></li></ul><ul><li><p>脚注</p><p>为名词提供注释，注释将显示在文章末尾</p><p>  语法：</p><p>待解释文字[^脚注 id]</p><p>[^脚注 id]:注释内容</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Hello World[^hello]</span><br><span class="line">[^hello]:你好, 世界</span><br></pre></td></tr></table></figure><p>Hello World<a href="你好中文注释">^hello</a></p></li></ul><ul><li><p>表格</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">|姓名|年龄|性别|身高(cm)|  </span><br><span class="line">|-|:-|:-:|-:|  </span><br><span class="line">|张三|22|男|180|  </span><br><span class="line">|李四|18|女|165|</span><br></pre></td></tr></table></figure><table><thead><tr><th>姓名</th><th align="left">年龄</th><th align="center">性别</th><th align="right">身高(cm)</th></tr></thead><tbody><tr><td>张三</td><td align="left">22</td><td align="center">男</td><td align="right">180</td></tr><tr><td>李四</td><td align="left">18</td><td align="center">女</td><td align="right">165</td></tr></tbody></table></li><li><p>字体的进阶修改和显示</p><p>  <font face="黑体" color=green size=5>我是黑体，绿色，尺寸为5</font></p>  <figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face&#x3D;&quot;黑体&quot; color&#x3D;green size&#x3D;5&gt;我是黑体，绿色，尺寸为5&lt;&#x2F;font&gt;</span><br></pre></td></tr></table></figure></li></ul><h2 id="文章插入图片"><a href="#文章插入图片" class="headerlink" title="文章插入图片"></a>文章插入图片</h2><p>在/source目录下新建一个images文件夹，将图片放入该文件夹下，插入图片时链接即为’/images/图片名称’。比如!<a href="/images/expamle.jpg">example</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> Hexo </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
